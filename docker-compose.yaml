version: '3.7'

services:

  magento:
    image: m2-php-nginx
    # container_name: magento
    build:
      context: ~/Work/docker-magento/php-nginx
      dockerfile: Dockerfile.php73-m2
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    volumes: &appvolumes
      - workspace:/var/www/magento
      - ./magento/app:/var/www/magento/app:delegated
      - ./magento/pub/media:/var/www/magento/pub/media:delegated
      - ./magento/.git:/var/www/magento/.git:delegated
      - ./magento/composer.json:/var/www/magento/composer.json:delegated
      - ./magento/composer.lock:/var/www/magento/composer.lock:delegated
      - ./magento/composer-patches.json:/var/www/magento/composer-patches.json:delegated
      - /Users/riwang/.composer:/var/www/magento/var/composer_home:delegated

  mysql:
    image: m2-mysql
    # container_name: mysql
    build: ~/Work/docker-magento/mysql
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
    volumes:
      - data:/mysql

  redis:
    image: redis:4-alpine
    # container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - data:/data

  sftp:
    image: sshd
    build: ~/Work/docker-magento/sshd
    restart: on-failure
    ports:
      - "2222:2222"
    environment:
      ROOT_PASSWORD: root
      DIRECTORY: /var/www/magento
    volumes: *appvolumes
    depends_on:
      - magento
    privileged: true

volumes:
  workspace:
  data:

networks:
  default:
